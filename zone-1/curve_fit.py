import numpy as np
import matplotlib.pyplot as plt
from sklearn.metrics import r2_score


strengths =  [42.16846021080987, 18.740575415848202, 10.941745577931787, 7.178525710783488, 4.932869302287515, 3.7181566364431924, 2.8144026725829416, 2.297807819607868, 1.8609245453134355, 1.5370421221190775, 1.2924462517340003, 1.0743774925982659, 0.9705766642959178, 0.8189735537233525, 0.7207043779818646, 0.6462961579304796, 0.5719723951297988, 0.49560226708884086, 0.4603191735000629, 0.4098240822831773, 0.3862863971413525, 0.3486146405574374, 0.3231632616591757, 0.2962021463270624, 0.27522742971490227, 0.25560377547894336, 0.23812607416500825, 0.22472312192595223, 0.20539134447036284, 0.19816797838105685, 0.18331472741043991, 0.17157492828761564, 0.16159619522236285]
distances = [0.17435897435897463, 0.24871794871794872, 0.3230769230769228, 0.39743589743589736, 0.4717948717948719, 0.5461538461538464, 0.6205128205128205, 0.6948717948717951, 0.7692307692307692, 0.8435897435897437, 0.9179487179487178, 0.9923076923076923, 1.0666666666666669, 1.141025641025641, 1.2153846153846153, 1.2897435897435898, 1.3641025641025641, 1.4384615384615387, 1.512820512820513, 1.5871794871794873, 1.6615384615384614, 1.735897435897436, 1.8102564102564103, 1.8846153846153846, 1.958974358974359, 2.033333333333333, 2.1076923076923078, 2.1820512820512823, 2.2564102564102564, 2.3307692307692305, 2.405128205128205, 2.4794871794871796, 2.5538461538461537]

# plt.plot(distances, strengths, '+')
# plt.title("Distance vs Strength")
# plt.show()

dist2 = np.reciprocal(np.power(distances,2))
strength2 = np.reciprocal(np.sqrt(strengths))

plt.plot(distances, strength2, '+')
#plt.plot(np.log10(strengths), distances,  '+')
plt.title("Distance vs 1/SQRT(Strength)")

# plt.plot(np.power(distances,1/3), (strengths), '+')
# plt.title("(Distance) vs SQRT(Strength)")

m1 = np.poly1d(np.polyfit(distances, strength2, 1))
r1 = r2_score(distances, m1(strength2))
print(f"{m1}  - R2 {r1}")

m2 = np.poly1d(np.polyfit(distances, strength2, 2))
r2 = r2_score(distances, m2(strength2))
print(f"Poly 3 LOG10r - \n{m2}  - R2 {r2}")

m3 = np.poly1d(np.polyfit(distances, strength2, 3))
r3 = r2_score(distances, m3(strength2))
print(f"Poly 3 LOG10r - \n{m3}  - R2 {r3}")

plt.plot(distances,m1(distances))
# plt.plot(distances,np.reciprocal(np.power(strengths,0.5)))

plt.show()



